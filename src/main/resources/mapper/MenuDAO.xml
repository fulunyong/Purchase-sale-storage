<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liujl.purchasesalestorage.dao.MenuDAO">
  <resultMap id="BaseResultMap" type="com.liujl.purchasesalestorage.domain.Menu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="available" jdbcType="INTEGER" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    id, menu_name, menu_url, description, `level`, parent_id, available
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liujl.purchasesalestorage.domain.Menu">
    insert into menu (id, menu_name, menu_url, 
      description, `level`, parent_id, 
      available)
    values (#{id,jdbcType=INTEGER}, #{menuName,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liujl.purchasesalestorage.domain.Menu">
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="menuName != null">
        menu_name,
      </if>
      <if test="menuUrl != null">
        menu_url,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null">
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liujl.purchasesalestorage.domain.Menu">
    update menu
    <set>
      <if test="menuName != null">
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null">
        menu_url = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liujl.purchasesalestorage.domain.Menu">
    update menu
    set menu_name = #{menuName,jdbcType=VARCHAR},
      menu_url = #{menuUrl,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>